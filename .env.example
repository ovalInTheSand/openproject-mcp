# OpenProject MCP Server Configuration Template (v2.0.0)
# Copy this file to .dev.vars for Cloudflare Workers development
# For production deployment, use: npx wrangler secret put VARIABLE_NAME

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Your OpenProject instance URL (no trailing slash)
# Example: https://openproject.example.com or https://thisistheway.local
OP_BASE_URL=https://thisistheway.local

# Your OpenProject API token
# Get from: User settings > Access tokens > Generate API key
# This token needs project management permissions
OP_TOKEN=your_api_token_here

# ============================================================================
# SECURITY & CORS CONFIGURATION
# ============================================================================

# Allowed CORS origins (comma-separated, no spaces)
# For Claude Code integration, include Claude domains
# For local development, include your local ports
ALLOWED_ORIGINS=https://claude.ai,https://app.claude.ai,http://localhost:3000,http://localhost:5173

# Allow insecure HTTP connections (development only, set to "true" if needed)
# NEVER set this to true in production
# OP_ALLOW_INSECURE_HTTP=false

# ============================================================================
# OBSERVABILITY & MONITORING (Optional)
# ============================================================================

# Sentry DSN for error tracking (optional)
# Get from: https://sentry.io/settings/[org]/projects/[project]/keys/
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Sentry configuration
# SENTRY_TRACES_SAMPLE_RATE=0.1
# SENTRY_SEND_PII=false
# SENTRY_ENABLE_LOGS=false

# ============================================================================
# DEVELOPMENT CONFIGURATION
# ============================================================================

# MCP Inspector settings (for debugging)
# CLIENT_PORT=7000
# SERVER_PORT=7001
# MCP_AUTO_OPEN_ENABLED=false

# Development server port (if different from default 8788)
# DEV_PORT=8788

# Development host rewrite (automatically fallback placeholder hosts)
# Enable to automatically rewrite placeholder hosts like 'thisistheway.local'
# OP_BASE_URL_AUTO_REWRITE=true

# Fallback host when auto-rewrite is enabled (defaults to https://127.0.0.1)
# DEV_HOST_FALLBACK=https://127.0.0.1

# Performance testing configuration (offline stub latency budget in milliseconds)
# Controls maximum allowed latency for offline stub tests (token == test-api-key)
# MCP_OFFLINE_PERF_BUDGET_MS=2500

# ============================================================================
# TLS CERTIFICATE CONFIGURATION
# ============================================================================

# For custom CA certificates (like internal/self-signed certs)
# Place your certificate file in the project root and reference it here
# The npm scripts automatically use NODE_EXTRA_CA_CERTS=./caddy-root.crt
# CA_CERT_PATH=./caddy-root.crt

# ============================================================================
# ENTERPRISE FEATURES (Optional)
# ============================================================================

# Default project settings for enterprise features
# DEFAULT_PROJECT_TEMPLATE=enterprise-template
# DEFAULT_WORK_PACKAGE_TYPE=task
# DEFAULT_STATUS=new
# DEFAULT_PRIORITY=normal

# Portfolio management settings
# PORTFOLIO_ENABLED=true
# RISK_MANAGEMENT_ENABLED=true
# PREDICTIVE_ANALYTICS_ENABLED=true

# ============================================================================
# DEPLOYMENT INSTRUCTIONS
# ============================================================================

# For Cloudflare Workers deployment:
# 1. Copy this file to .dev.vars for local development
# 2. Use wrangler secrets for production: npx wrangler secret put OP_BASE_URL
# 3. Configure environment-specific variables in wrangler.toml

# For Docker deployment:
# 1. Copy this file to .env
# 2. Update docker-compose.yml to reference environment variables
# 3. Consider using Docker secrets for sensitive values

# For local development:
# 1. Copy to .dev.vars: cp .env.example .dev.vars
# 2. Update with your actual OpenProject URL and API token
# 3. Run: npm run dev

# ============================================================================
# TESTING YOUR CONFIGURATION
# ============================================================================

# Quick health check (after starting the server with npm run dev):
# npm run health
# 
# Manual health check:
# curl -X POST http://localhost:8788/mcp \
#   -H "Content-Type: application/json" \
#   -H "Accept: application/json" \
#   -d '{"jsonrpc":"2.0","id":1,"method":"tools/call","params":{"name":"op.health","arguments":{}}}'

# ============================================================================
# SECURITY REMINDERS
# ============================================================================

# - Never commit real API tokens to version control
# - Use environment-specific configuration files
# - Rotate API tokens regularly
# - Use HTTPS in production
# - Validate CORS origins carefully
# - Keep this .env.example file updated but scrubbed of secrets